class s extends class{constructor(){this.configurations=new Map}remove(s){this.configurations.delete(s)}hasConfigurations(){return this.configurations.size>0}getConfigurations(){return this.configurations}values(){return this.configurations.values()}keys(){return this.configurations.keys()}}{add(s){this.configurations.set(s.key,s)}}class t{constructor(s,t,e,n){this.key=s,this.value=t,this.disabled=e,this.selected=n}}class e{static generateConfigurationFromItemOptions(e){const n=new s;return Array.from(e.querySelectorAll("snt-item")).forEach(s=>{n.add(new t(s.hasAttribute("key")?s.getAttribute("key"):"",s.hasAttribute("value")?s.getAttribute("value"):"",!!s.hasAttribute("disabled")&&Boolean(s.getAttribute("disabled")),!!s.hasAttribute("selected")&&Boolean(s.getAttribute("selected"))))}),n}}export{e as I}